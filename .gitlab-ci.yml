#Build:
#  image: docker:latest
#  stage: build
#  services:
#    - docker:dind
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
#    - echo $CI_ENV_STAGING >> build/.env    
#    - ls -la 
#    - ls -la build    
#    - cat build/.env    
#  script:
#    - chmod +x script_staging.sh script_master.sh
#    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then ./script_master.sh ; else ./script_staging.sh ; fi    

Deploy:
  image: alpine:3.7
  stage: deploy
  environment:
    name: deploy
  only:
    - /^release.*$/
    - master
    - staging
  variables:
    file_yaml_secret: 01-secret.yaml  
  before_script:
  
# SELECT master or staging
    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then 
        echo "MASTER" ; 
      else 
        echo "STAGING" ;
        cat "$CI_ENV_STAGING" > temp_env ;        
      fi
      
# ENV SECRET 01-secret.yaml
    - sed -i 's/^/  /g' temp_env ;
    - sed -i 's/=/:\ "/1' temp_env ;
    - sed -i 's/$/"/' temp_env ; 
    - cat temp_env >> deploy/01-secret.yaml ;
    - sed -i '4 s/name:\ /&'"$CI_COMMIT_BRANCH"'-/g' deploy/01-secret.yaml
    - sed -i '5 s/namespace:\ /&'"$CI_COMMIT_BRANCH"'/g' deploy/01-secret.yaml

# ENV SECRET 02-deployment.yaml
    - sed -i '4 s/name:\ /&'"$CI_COMMIT_BRANCH"'-/g' deploy/02-deployment.yaml
    - sed -i '5 s/namespace:\ /&'"$CI_COMMIT_BRANCH"'/g' deploy/02-deployment.yaml            
#         image: ccjjss/apiautogermana    

  script:
#    - ls -la deploy    
#    - cat deploy/01-secret.yaml            
    - cat deploy/02-deployment.yaml            


    - apk update  && apk add --no-cache curl grep
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p ${HOME}/.kube
    - cat ${KUBECONFIG} > $HOME/.kube/config
    
# ENV SECRET
#    - kubectl apply -f deploy/01-secret.yaml
    - kubectl apply -f deploy/$file_yaml_secret
    

#    - CONTAINER_IMAGE=ccjjss\\/apiecommerce:stg-"$CI_COMMIT_SHORT_SHA"
#    - sed -i "s/image:.*/&$CONTAINER_IMAGE/g" deploy/02-deployment.yaml
#    - cat deploy/02-deployment.yaml    
#    - kubectl apply -f deploy/02-deployment.yaml    