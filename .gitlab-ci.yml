Build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - imagen_docker="$CI_REGISTRY_IMAGE":"$CI_COMMIT_BRANCH"-"$CI_COMMIT_SHORT_SHA"  
    - echo $imagen_docker  
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - echo $CI_ENV_STAGING >> build/.env    
    - ls -la 
    - ls -la build    
    - cat build/.env  
    - chmod +x script_staging.sh script_master.sh

    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then 
        echo "MASTER" ; 
        docker build --pull -t "$CI_REGISTRY_IMAGE" . ;
        docker tag  "$CI_REGISTRY_IMAGE" "$imagen_docker" ;        
        docker tag  "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE":latest ;        
      else 
        echo "STAGING" ;
        docker build --pull -t "$imagen_docker" . ;
      fi
      
  script:
    docker push "$CI_REGISTRY_IMAGE" ; 

Deploy:
  image: alpine:3.7
  stage: deploy
  environment:
    name: deploy
  only:
    - /^release.*$/
    - master
    - staging
  variables:
    file_yaml_secret: 01-secret.yaml
    file_yaml_deployment: 02-deployment.yaml      
  before_script:
    - imagen_docker=$(echo "$CI_REGISTRY_IMAGE" | sed 's/\//\\\//g')  
    - imagen_docker="$imagen_docker"$(echo ":")"$CI_COMMIT_BRANCH"$(echo "-")"$CI_COMMIT_SHORT_SHA"
#    - imagen_docker=$(echo "$CI_REGISTRY_IMAGE" | sed 's/\//\\\//g')  
#    $(echo "$CI_REGISTRY_IMAGE" | sed 's/\//-/g')  
#    echo '${CI_REGISTRY_IMAGE/\//-}'
#    :"$CI_COMMIT_BRANCH"-"$CI_COMMIT_SHORT_SHA"  
    - echo $imagen_docker
  
# SELECT master or staging ENV
    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then 
        echo "MASTER" ; 
      else 
        echo "STAGING" ;
        cat "$CI_ENV_STAGING" > temp_env ;        
      fi
      
# ENV SECRET ${file_yaml_secret}
    - sed -i 's/^/  /g' temp_env ;
    - sed -i 's/=/:\ "/1' temp_env ;
    - sed -i 's/$/"/' temp_env ; 
    - cat temp_env >> deploy/${file_yaml_secret} ;
    - sed -i '4 s/name:\ /&'"$CI_COMMIT_BRANCH"'-/g' deploy/${file_yaml_secret} ;
    - sed -i '5 s/namespace:\ /&'"$CI_COMMIT_BRANCH"'/g' deploy/${file_yaml_secret} ;

# DEPLOYMENT ${file_yaml_deployment}
    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then 
        echo "DEPLOYMENT MASTER" ; 
      else 
        echo "DEPLOYMENT STAGING" ;
        sed -i 's/apiecommerce/staging-apiecommerce/g' deploy/${file_yaml_deployment} ;
      fi
    - sed -i '4 s/name:\ /&'"$CI_COMMIT_BRANCH"'-/g' deploy/${file_yaml_deployment}
    - sed -i '5 s/namespace:\ /&'"$CI_COMMIT_BRANCH"'/g' deploy/${file_yaml_deployment}
    - sed -i '20 s/image:\ /&'"$imagen_docker"'/g' deploy/${file_yaml_deployment}    

  script:
#    - ls -la deploy    
#    - cat deploy/${file_yaml_secret}
    - cat deploy/${file_yaml_deployment}

    - apk update  && apk add --no-cache curl grep
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p ${HOME}/.kube
    - cat ${KUBECONFIG} > $HOME/.kube/config
    
# ENV SECRET
#    - echo $file_yaml_secret
    - kubectl apply -f deploy/${file_yaml_secret}
    
    
# DEPLOYMENT
    - echo $file_yaml_deployment
    - kubectl apply -f deploy/${file_yaml_deployment}    
    

#    - CONTAINER_IMAGE=ccjjss\\/apiecommerce:stg-"$CI_COMMIT_SHORT_SHA"
#    - sed -i "s/image:.*/&$CONTAINER_IMAGE/g" deploy/${file_yaml_deployment}
#    - cat deploy/${file_yaml_deployment}
#    - kubectl apply -f deploy/${file_yaml_deployment}